/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FAddMessage.java
 *
 * Created on 23.06.2010, 22:02:21
 */

package geotweet;
import java.sql.*;

/**
 *
 * @author R. C. Ladiges
 */
public class FAddMessage extends javax.swing.JFrame {
    protected FMainKarte mainframe = null;


    /** Creates new form FAddMessage */
    public FAddMessage(FMainKarte frame, double y, double x) {
        initComponents();
        this.mainframe = frame;
        jTextField1.setText(Double.toString(y));
        jTextField2.setText(Double.toString(x));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setTitle("Neuer Tweet");
        setAlwaysOnTop(true);
        setResizable(false);

        jTextField1.setEditable(false);
        jTextField1.setText("jTextField1");

        jTextField2.setEditable(false);
        jTextField2.setText("jTextField2");

        jLabel2.setText("Tweet");

        jButton1.setText("post");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(2);
        jTextArea2.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextArea2InputMethodTextChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(7, 7, 7)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        filter();
        if (jTextArea2.getText().length() < 1) return;
        addMessage(
                Double.valueOf(jTextField1.getText()),
                Double.valueOf(jTextField2.getText()),
                mainframe.myself,
                jTextArea2.getText());
        mainframe.updateMap();
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextArea2InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextArea2InputMethodTextChanged
        filter();
    }//GEN-LAST:event_jTextArea2InputMethodTextChanged

    /**
    * @param args the command line arguments
    */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                //new FAddMessage().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    protected void filter(){
        String out = jTextArea2.getText();
        if (out.length() >140) out = out.substring(0, 140);
        jTextArea2.setText(out);      
    }



    public void addMessage(double y, double x, GeotweetUser user, String msg){
        if(!mainframe.connect()) return;
        if(msg.length()<1) return;
        try{
            String db = "bai2dbp_geotweet";
            String query = "INSERT INTO `"+db+"`.`position` " +
                " (`position_x`,`position_y`) " +
                "VALUES ('"+x+"', '"+y+"');";
            /*
              `position_x` und `position_y` sind ein UNIQUE Tupel. Trotzdem
              kommt es ab und zu zu Fehlern, dass ein doppelter Eintrag fÃ¼r ein
              und die selbe Position angelegt wird. (DBMS Schuld ?)
            */
            Statement s = mainframe.jdbc_conn.createStatement();
            try{s.execute(query);}
            catch(Exception e){}
            query = "SELECT `position_id` FROM `"+db+"`.`position` " +
                "WHERE `position_x` = '"+x+"' AND `position_y` = '"+y+"' ";
            s = mainframe.jdbc_conn.createStatement();
            if(s.execute(query)){
                ResultSet rs = s.getResultSet();
                int posid = 0;
                while(rs.next()){
                    posid = rs.getInt("position_id");
                }
                query = "INSERT INTO `"+db+"`.`message` " +
                " (`user_id`,`position_id`,`message_text`) " +
                "VALUES ('"+user.getId()+"', '"+posid+"', '"+msg+"');";
                s = mainframe.jdbc_conn.createStatement();
                s.execute(query);
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        mainframe.disconnect();
    }




}
